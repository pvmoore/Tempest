package tempest.sql;

import java.util.Enumeration;
import java.util.Hashtable;

public class Keyword {
    public static final int ABSOLUTE = 1000;
    public static final int ACTION = 1001;
    public static final int ADD = 1002;
    public static final int ADMIN = 1003;
    public static final int AFTER = 1004;
    public static final int AGGREGATE = 1005;
    public static final int ALIAS = 1006;
    public static final int ALL = 1007;
    public static final int ALLOCATE = 1008;
    public static final int ALTER = 1009;
    public static final int AND = 1010;
    public static final int ANY = 1011;
    public static final int ARE = 1012;
    public static final int ARRAY = 1013;
    public static final int AS = 1014;
    public static final int ASC = 1015;
    public static final int ASSERTION = 1016;
    public static final int AT = 1017;
    public static final int AUTHORIZATION = 1018;

    public static final int BEFORE = 1019;
    public static final int BEGIN = 1020;
    public static final int BINARY = 1021;
    public static final int BIT = 1022;
    public static final int BLOB = 1023;
    public static final int BOOLEAN = 1024;
    public static final int BOTH = 1025;
    public static final int BREADTH = 1026;
    public static final int BY = 1027;

    public static final int CALL = 1028;
    public static final int CASCADE = 1029;
    public static final int CASCADED = 1030;
    public static final int CASE = 1031;
    public static final int CAST = 1032;
    public static final int CATALOG = 1033;
    public static final int CHAR = 1034;
    public static final int CHARACTER = 1035;
    public static final int CHECK = 1036;
    public static final int CLASS = 1037;
    public static final int CLOB = 1038;
    public static final int CLOSE = 1039;
    public static final int COLLATE = 1040;
    public static final int COLLATION = 1041;
    public static final int COLUMN = 1042;
    public static final int COMMIT = 1043;
    public static final int COMPLETION = 1044;
    public static final int CONDITION = 1045;
    public static final int CONNECT = 1046;
    public static final int CONNECTION = 1047;
    public static final int CONSTRAINT = 1048;
    public static final int CONSTRAINTS = 1049;
    public static final int CONSTRUCTOR = 1050;
    public static final int CONTAINS = 1051;
    public static final int CONTINUE = 1052;
    public static final int CORRESPONDING = 1053;
    public static final int CREATE = 1054;
    public static final int CROSS = 1055;
    public static final int CUBE = 1056;
    public static final int CURRENT = 1057;
    public static final int CURRENT_DATE = 1058;
    public static final int CURRENT_PATH = 1059;
    public static final int CURRENT_ROLE = 1060;
    public static final int CURRENT_TIME = 1061;
    public static final int CURRENT_TIMESTAMP = 1062;
    public static final int CURRENT_USER = 1063;
    public static final int CURSOR = 1064;
    public static final int CYCLE = 1065;

    public static final int DATA = 1066;
    public static final int DATALINK = 1067;
    public static final int DATE = 1068;
    public static final int DAY = 1069;
    public static final int DEALLOCATE = 1070;
    public static final int DEC = 1071;
    public static final int DECIMAL = 1072;
    public static final int DECLARE = 1073;
    public static final int DEFAULT = 1074;
    public static final int DEFERRABLE = 1075;
    public static final int DELETE = 1076;
    public static final int DEPTH = 1077;
    public static final int DEREF = 1078;
    public static final int DESC = 1079;
    public static final int DESCRIPTOR = 1080;
    public static final int DIAGNOSTICS = 1081;
    public static final int DICTIONARY = 1082;
    public static final int DISCONNECT = 1083;
    public static final int DISTINCT = 10835;
    public static final int DO = 1084;
    public static final int DOMAIN = 1085;
    public static final int DOUBLE = 1086;
    public static final int DROP = 1087;

    public static final int END_EXEC = 1088;
    public static final int EQUALS = 1089;
    public static final int ESCAPE = 1090;
    public static final int EXCEPT = 1091;
    public static final int EXCEPTION = 1092;
    public static final int EXECUTE = 1093;
    public static final int EXIT = 1094;
    public static final int EXPAND = 1095;
    public static final int EXPANDING = 1096;

    public static final int FALSE = 1097;
    public static final int FIRST = 1098;
    public static final int FLOAT = 1099;
    public static final int FOR = 1100;
    public static final int FOREIGN = 1101;
    public static final int FREE = 1102;
    public static final int FROM = 1103;
    public static final int FUNCTION = 1104;

    public static final int GENERAL = 1105;
    public static final int GET = 1106;
    public static final int GLOBAL = 1107;
    public static final int GOTO = 1108;
    public static final int GRANT = 11085;
    public static final int GROUP = 1109;
    public static final int GROUPING = 1110;

    public static final int HANDLER = 1111;
    public static final int HASH = 1112;
    public static final int HAVING = 11121;
    public static final int HOUR = 1113;

    public static final int IDENTITY = 1114;
    public static final int IF = 1115;
    public static final int IGNORE = 1116;
    public static final int IMMEDIATE = 1117;
    public static final int IN = 1118;
    public static final int INDICATOR = 1119;
    public static final int INITIALIZE = 1120;
    public static final int INITIALLY = 1121;
    public static final int INNER = 1122;
    public static final int INOUT = 1123;
    public static final int INPUT = 1124;
    public static final int INSERT = 1125;
    public static final int INT = 1126;
    public static final int INTEGER = 1127;
    public static final int INTERSECT = 1128;
    public static final int INTERVAL = 1129;
    public static final int INTO = 1130;
    public static final int IS = 1131;
    public static final int ISOLATION = 1132;
    public static final int ITERATE = 1133;

    public static final int JOIN = 1134;

    public static final int KEY = 1135;

    public static final int LANGUAGE = 1136;
    public static final int LARGE = 1137;
    public static final int LAST = 1138;
    public static final int LATERAL = 1139;
    public static final int LEADING = 1140;
    public static final int LEAVE = 1141;
    public static final int LEFT = 1142;
    public static final int LESS = 1143;
    public static final int LEVEL = 1144;
    public static final int LIKE = 1145;
    public static final int LIMIT = 1146;
    public static final int LOCAL = 1147;
    public static final int LOCALTIME = 1148;
    public static final int LOCALTIMESTAMP = 1149;
    public static final int LOCATOR = 1150;
    public static final int LOOP = 1151;

    public static final int MATCH = 1152;
    public static final int MEETS = 1153;
    public static final int MINUTE = 1154;
    public static final int MODIFIES = 1155;
    public static final int MODIFY = 1156;
    public static final int MODULE = 1157;
    public static final int MONTH = 1158;

    public static final int NAMES = 1159;
    public static final int NATIONAL = 1160;
    public static final int NATURAL = 1161;
    public static final int NCHAR = 1162;
    public static final int NCLOB = 1163;
    public static final int NEW = 1164;
    public static final int NEXT = 1165;
    public static final int NO = 1166;
    public static final int NONE = 1167;
    public static final int NORMALIZE = 1168;
    public static final int NOT = 1169;
    public static final int NULL = 1170;
    public static final int NUMERIC = 1171;

    public static final int OBJECT = 1172;
    public static final int OF = 1173;
    public static final int OFF = 1174;
    public static final int OLD = 1175;
    public static final int ON = 1176;
    public static final int ONLY = 1177;
    public static final int OPEN = 1178;
    public static final int OPERATION = 1179;
    public static final int OPTION = 1180;
    public static final int OR = 1181;
    public static final int ORDER = 1182;
    public static final int ORDINALITY = 1183;
    public static final int OUT = 1184;
    public static final int OUTER = 1185;
    public static final int OUTPUT = 1185;

    public static final int PAD = 1186;
    public static final int PARAMETER = 1187;
    public static final int PARAMETERS = 1188;
    public static final int PARTIAL = 1189;
    public static final int PATH = 1190;
    public static final int PERIOD = 1191;
    public static final int POSTFIX = 1192;
    public static final int PRECEDES = 1193;
    public static final int PRECISION = 1194;
    public static final int PREFIX = 1195;
    public static final int PREORDER = 1196;
    public static final int PREPARE = 1197;
    public static final int PRESERVE = 1198;
    public static final int PRIMARY = 1199;
    public static final int PRIOR = 1200;
    public static final int PRIVILEGES = 1201;
    public static final int PROCEDURE = 1202;
    public static final int PUBLIC = 1203;

    public static final int READ = 1204;
    public static final int READS = 1205;
    public static final int REAL = 1206;
    public static final int RECURSIVE = 1207;
    public static final int REDO = 1208;
    public static final int REF = 1209;
    public static final int REFERENCES = 1210;
    public static final int REFERENCING = 1211;
    public static final int RELATIVE = 1212;
    public static final int REPEAT = 1213;
    public static final int RESIGNAL = 1214;
    public static final int RESTRICT = 1215;
    public static final int RESULT = 1216;
    public static final int RETURN = 1217;
    public static final int RETURNS = 1218;
    public static final int REVOKE = 1219;
    public static final int RIGHT = 1220;
    public static final int ROLE = 1221;
    public static final int ROLLBACK = 1222;
    public static final int ROLLUP = 1223;
    public static final int ROUTINE = 1224;
    public static final int ROW = 1225;
    public static final int ROWS = 1226;

    public static final int SAVEPOINT = 1227;
    public static final int SCHEMA = 1228;
    public static final int SCROLL = 1229;
    public static final int SEARCH = 1230;
    public static final int SECOND = 1231;
    public static final int SECTION = 1232;
    public static final int SELECT = 1233;
    public static final int SEQUENCE = 1234;
    public static final int SESSION = 1235;
    public static final int SESSION_USER = 1236;
    public static final int SET = 1237;
    public static final int SETS = 1238;
    public static final int SIGNAL = 1239;
    public static final int SIZE = 1240;
    public static final int SMALLINT = 1241;
    public static final int SPECIFIC = 1242;
    public static final int SPECIFICTYPE = 1243;
    public static final int SQL = 1244;
    public static final int SQLEXCEPTION = 1245;
    public static final int SQLSTATE = 1246;
    public static final int SQLWARNING = 1247;
    public static final int START = 1248;
    public static final int STATE = 1249;
    public static final int STATIC = 1250;
    public static final int STRUCTURE = 1251;
    public static final int SUCCEEDS = 1252;
    public static final int SUM = 1253;
    public static final int SYSTEM_USER = 1254;

    public static final int TABLE = 1255;
    public static final int TEMPORARY = 1256;
    public static final int TERMINATE = 1257;
    public static final int THAN = 1258;
    public static final int THEN = 1259;
    public static final int TIME = 1260;
    public static final int TIMESTAMP = 1261;
    public static final int TIMEZONE_HOUR = 1262;
    public static final int TIMEZONE_MINUTE = 1263;
    public static final int TO = 1264;
    public static final int TRAILING = 1265;
    public static final int TRANSACTION = 1266;
    public static final int TRANSLATION = 1267;
    public static final int TREAT = 1268;
    public static final int TRIGGER = 1269;
    public static final int TRUE = 1270;

    public static final int UNDER = 1271;
    public static final int UNDO = 1272;
    public static final int UNION = 1273;
    public static final int UNIQUE = 1274;
    public static final int UNKNOWN = 1275;
    public static final int UNTIL = 1276;
    public static final int UPDATE = 1277;
    public static final int USAGE = 1278;
    public static final int USER = 1279;
    public static final int USING = 1280;

    public static final int VALUE = 1281;
    public static final int VALUES = 1282;
    public static final int VARCHAR = 12825;
    public static final int VARIABLE = 1283;
    public static final int VARYING = 1284;
    public static final int VIEW = 1285;

    public static final int WHEN = 1286;
    public static final int WHENEVER = 1287;
    public static final int WHERE = 1288;
    public static final int WHILE = 1289;
    public static final int WITH = 1290;
    public static final int WRITE = 1291;

    public static final int YEAR = 1292;

    public static final int ZONE = 1293;

    private static Hashtable<String, Integer> keywords = new Hashtable<String, Integer>();
    private static Hashtable<Integer, String> ints = new Hashtable<Integer, String>();

    static {
        keywords.put("ABSOLUTE", ABSOLUTE);
        keywords.put("ACTION", ACTION);
        keywords.put("ADD", ADD);
        keywords.put("ADMIN", ADMIN);
        keywords.put("AFTER", AFTER);
        keywords.put("AGGREGATE", AGGREGATE);
        keywords.put("ALIAS", ALIAS);
        keywords.put("ALL", ALL);
        keywords.put("ALLOCATE", ALLOCATE);
        keywords.put("ALTER", ALTER);
        keywords.put("AND", AND);
        keywords.put("ANY", ANY);
        keywords.put("ARE", ARE);
        keywords.put("ARRAY", ARRAY);
        keywords.put("AS", AS);
        keywords.put("ASC", ASC);
        keywords.put("ASSERTION", ASSERTION);
        keywords.put("AT", AT);
        keywords.put("AUTHORIZATION", AUTHORIZATION);

        keywords.put("BEFORE", new Integer(BEFORE));
        keywords.put("BEGIN", new Integer(BEGIN));
        keywords.put("BINARY", new Integer(BINARY));
        keywords.put("BIT", new Integer(BIT));
        keywords.put("BLOB", new Integer(BLOB));
        keywords.put("BOOLEAN", new Integer(BOOLEAN));
        keywords.put("BOTH", new Integer(BOTH));
        keywords.put("BREADTH", new Integer(BREADTH));
        keywords.put("BY", new Integer(BY));

        keywords.put("CALL", new Integer(CALL));
        keywords.put("CASCADE", new Integer(CASCADE));
        keywords.put("CASCADED", new Integer(CASCADED));
        keywords.put("CASE", new Integer(CASE));
        keywords.put("CAST", new Integer(CAST));
        keywords.put("CATALOG", new Integer(CATALOG));
        keywords.put("CHAR", new Integer(CHAR));
        keywords.put("CHARACTER", new Integer(CHARACTER));
        keywords.put("CHECK", new Integer(CHECK));
        keywords.put("CLASS", new Integer(CLASS));
        keywords.put("CLOB", new Integer(CLOB));
        keywords.put("CLOSE", new Integer(CLOSE));
        keywords.put("COLLATE", new Integer(COLLATE));
        keywords.put("COLLATION", new Integer(COLLATION));
        keywords.put("COLUMN", new Integer(COLUMN));
        keywords.put("COMMIT", new Integer(COMMIT));
        keywords.put("COMPLETION", new Integer(COMPLETION));
        keywords.put("CONDITION", new Integer(CONDITION));
        keywords.put("CONNECT", new Integer(CONNECT));
        keywords.put("CONNECTION", new Integer(CONNECTION));
        keywords.put("CONSTRAINT", new Integer(CONSTRAINT));
        keywords.put("CONSTRAINTS", new Integer(CONSTRAINTS));
        keywords.put("CONSTRUCTOR", new Integer(CONSTRUCTOR));
        keywords.put("CONTAINS", new Integer(CONTAINS));
        keywords.put("CONTINUE", new Integer(CONTINUE));
        keywords.put("CORRESPONDING", new Integer(CORRESPONDING));
        keywords.put("CREATE", new Integer(CREATE));
        keywords.put("CROSS", new Integer(CROSS));
        keywords.put("CUBE", new Integer(CUBE));
        keywords.put("CURRENT", new Integer(CURRENT));
        keywords.put("CURRENT_DATE", new Integer(CURRENT_DATE));
        keywords.put("CURRENT_PATH", new Integer(CURRENT_PATH));
        keywords.put("CURRENT_ROLE", new Integer(CURRENT_ROLE));
        keywords.put("CURRENT_TIME", new Integer(CURRENT_TIME));
        keywords.put("CURRENT_TIMESTAMP", new Integer(CURRENT_TIMESTAMP));
        keywords.put("CURRENT_USER", new Integer(CURRENT_USER));
        keywords.put("CURSOR", new Integer(CURSOR));
        keywords.put("CYCLE", new Integer(CYCLE));

        keywords.put("DATA", new Integer(DATA));
        keywords.put("DATALINK", new Integer(DATALINK));
        keywords.put("DATE", new Integer(DATE));
        //keywords.put("DATETIME",new Integer(DATETIME));
        keywords.put("DAY", new Integer(DAY));
        keywords.put("DEALLOCATE", new Integer(DEALLOCATE));
        keywords.put("DEC", new Integer(DEC));
        keywords.put("DECIMAL", new Integer(DECIMAL));
        keywords.put("DECLARE", new Integer(DECLARE));
        keywords.put("DEFAULT", new Integer(DEFAULT));
        keywords.put("DEFERRABLE", new Integer(DEFERRABLE));
        keywords.put("DELETE", new Integer(DELETE));
        keywords.put("DEPTH", new Integer(DEPTH));
        keywords.put("DEREF", new Integer(DEREF));
        keywords.put("DESC", new Integer(DESC));
        keywords.put("DESCRIPTOR", new Integer(DESCRIPTOR));
        keywords.put("DIAGNOSTICS", new Integer(DIAGNOSTICS));
        keywords.put("DICTIONARY", new Integer(DICTIONARY));
        keywords.put("DISCONNECT", new Integer(DISCONNECT));
        keywords.put("DISTINCT", new Integer(DISTINCT));
        keywords.put("DO", new Integer(DO));
        keywords.put("DOMAIN", new Integer(DOMAIN));
        keywords.put("DOUBLE", new Integer(DOUBLE));
        keywords.put("DROP", new Integer(DROP));

        keywords.put("END_EXEC", new Integer(END_EXEC));
        keywords.put("EQUALS", new Integer(EQUALS));
        keywords.put("ESCAPE", new Integer(ESCAPE));
        keywords.put("EXCEPT", new Integer(EXCEPT));
        keywords.put("EXCEPTION", new Integer(EXCEPTION));
        keywords.put("EXECUTE", new Integer(EXECUTE));
        keywords.put("EXIT", new Integer(EXIT));
        keywords.put("EXPAND", new Integer(EXPAND));
        keywords.put("EXPANDING", new Integer(EXPANDING));

        keywords.put("FALSE", new Integer(FALSE));
        keywords.put("FIRST", new Integer(FIRST));
        keywords.put("FLOAT", new Integer(FLOAT));
        keywords.put("FOR", new Integer(FOR));
        keywords.put("FOREIGN", new Integer(FOREIGN));
        keywords.put("FREE", new Integer(FREE));
        keywords.put("FROM", new Integer(FROM));
        keywords.put("FUNCTION", new Integer(FUNCTION));

        keywords.put("GENERAL", new Integer(GENERAL));
        keywords.put("GET", new Integer(GET));
        keywords.put("GLOBAL", new Integer(GLOBAL));
        keywords.put("GOTO", new Integer(GOTO));
        keywords.put("GRANT", new Integer(GRANT));
        keywords.put("GROUP", new Integer(GROUP));
        keywords.put("GROUPING", new Integer(GROUPING));

        keywords.put("HANDLER", new Integer(HANDLER));
        keywords.put("HASH", new Integer(HASH));
        keywords.put("HAVING", new Integer(HAVING));
        keywords.put("HOUR", new Integer(HOUR));

        keywords.put("IDENTITY", new Integer(IDENTITY));
        keywords.put("IF", new Integer(IF));
        keywords.put("IGNORE", new Integer(IGNORE));
        keywords.put("IMMEDIATE", new Integer(IMMEDIATE));
        keywords.put("IN", new Integer(IN));
        keywords.put("INDICATOR", new Integer(INDICATOR));
        keywords.put("INITIALIZE", new Integer(INITIALIZE));
        keywords.put("INITIALLY", new Integer(INITIALLY));
        keywords.put("INNER", new Integer(INNER));
        keywords.put("INOUT", new Integer(INOUT));
        keywords.put("INPUT", new Integer(INPUT));
        keywords.put("INSERT", new Integer(INSERT));
        keywords.put("INT", new Integer(INT));
        keywords.put("INTEGER", new Integer(INTEGER));
        keywords.put("INTERSECT", new Integer(INTERSECT));
        keywords.put("INTERVAL", new Integer(INTERVAL));
        keywords.put("INTO", new Integer(INTO));
        keywords.put("IS", new Integer(IS));
        keywords.put("ISOLATION", new Integer(ISOLATION));
        keywords.put("ITERATE", new Integer(ITERATE));

        keywords.put("JOIN", new Integer(JOIN));

        keywords.put("KEY", new Integer(KEY));

        keywords.put("LANGUAGE", new Integer(LANGUAGE));
        keywords.put("LARGE", new Integer(LARGE));
        keywords.put("LAST", new Integer(LAST));
        keywords.put("LATERAL", new Integer(LATERAL));
        keywords.put("LEADING", new Integer(LEADING));
        keywords.put("LEAVE", new Integer(LEAVE));
        keywords.put("LEFT", new Integer(LEFT));
        keywords.put("LESS", new Integer(LESS));
        keywords.put("LEVEL", new Integer(LEVEL));
        keywords.put("LIKE", new Integer(LIKE));
        keywords.put("LIMIT", new Integer(LIMIT));
        keywords.put("LOCAL", new Integer(LOCAL));
        keywords.put("LOCALTIME", new Integer(LOCALTIME));
        keywords.put("LOCALTIMESTAMP", new Integer(LOCALTIMESTAMP));
        keywords.put("LOCATOR", new Integer(LOCATOR));
        keywords.put("LOOP", new Integer(LOOP));

        keywords.put("MATCH", new Integer(MATCH));
        keywords.put("MEETS", new Integer(MEETS));
        keywords.put("MINUTE", new Integer(MINUTE));
        keywords.put("MODIFIES", new Integer(MODIFIES));
        keywords.put("MODIFY", new Integer(MODIFY));
        keywords.put("MODULE", new Integer(MODULE));
        keywords.put("MONTH", new Integer(MONTH));

        keywords.put("NAMES", new Integer(NAMES));
        keywords.put("NATIONAL", new Integer(NATIONAL));
        keywords.put("NATURAL", new Integer(NATURAL));
        keywords.put("NCHAR", new Integer(NCHAR));
        keywords.put("NCLOB", new Integer(NCLOB));
        keywords.put("NEW", new Integer(NEW));
        keywords.put("NEXT", new Integer(NEXT));
        keywords.put("NO", new Integer(NO));
        keywords.put("NONE", new Integer(NONE));
        keywords.put("NORMALIZE", new Integer(NORMALIZE));
        keywords.put("NOT", new Integer(NOT));
        keywords.put("NULL", new Integer(NULL));
        keywords.put("NUMERIC", new Integer(NUMERIC));

        keywords.put("OBJECT", new Integer(OBJECT));
        keywords.put("OF", new Integer(OF));
        keywords.put("OFF", new Integer(OFF));
        keywords.put("OLD", new Integer(OLD));
        keywords.put("ON", new Integer(ON));
        keywords.put("ONLY", new Integer(ONLY));
        keywords.put("OPEN", new Integer(OPEN));
        keywords.put("OPERATION", new Integer(OPERATION));
        keywords.put("OPTION", new Integer(OPTION));
        keywords.put("OR", new Integer(OR));
        keywords.put("ORDER", new Integer(ORDER));
        keywords.put("ORDINALITY", new Integer(ORDINALITY));
        keywords.put("OUT", new Integer(OUT));
        keywords.put("OUTER", new Integer(OUTER));
        keywords.put("OUTPUT", new Integer(OUTPUT));

        keywords.put("PAD", new Integer(PAD));
        keywords.put("PARAMETER", new Integer(PARAMETER));
        keywords.put("PARAMETERS", new Integer(PARAMETERS));
        keywords.put("PARTIAL", new Integer(PARTIAL));
        keywords.put("PATH", new Integer(PATH));
        keywords.put("PERIOD", new Integer(PERIOD));
        keywords.put("POSTFIX", new Integer(POSTFIX));
        keywords.put("PRECEDES", new Integer(PRECEDES));
        keywords.put("PRECISION", new Integer(PRECISION));
        keywords.put("PREFIX", new Integer(PREFIX));
        keywords.put("PREORDER", new Integer(PREORDER));
        keywords.put("PREPARE", new Integer(PREPARE));
        keywords.put("PRESERVE", new Integer(PRESERVE));
        keywords.put("PRIMARY", new Integer(PRIMARY));
        keywords.put("PRIOR", new Integer(PRIOR));
        keywords.put("PRIVILEGES", new Integer(PRIVILEGES));
        keywords.put("PROCEDURE", new Integer(PROCEDURE));
        keywords.put("PUBLIC", new Integer(PUBLIC));

        keywords.put("READ", new Integer(READ));
        keywords.put("READS", new Integer(READS));
        keywords.put("REAL", new Integer(REAL));
        keywords.put("RECURSIVE", new Integer(RECURSIVE));
        keywords.put("REDO", new Integer(REDO));
        keywords.put("REF", new Integer(REF));
        keywords.put("REFERENCES", new Integer(REFERENCES));
        keywords.put("REFERENCING", new Integer(REFERENCING));
        keywords.put("RELATIVE", new Integer(RELATIVE));
        keywords.put("REPEAT", new Integer(REPEAT));
        keywords.put("RESIGNAL", new Integer(RESIGNAL));
        keywords.put("RESTRICT", new Integer(RESTRICT));
        keywords.put("RESULT", new Integer(RESULT));
        keywords.put("RETURN", new Integer(RETURN));
        keywords.put("RETURNS", new Integer(RETURNS));
        keywords.put("REVOKE", new Integer(REVOKE));
        keywords.put("RIGHT", new Integer(RIGHT));
        keywords.put("ROLE", new Integer(ROLE));
        keywords.put("ROLLBACK", new Integer(ROLLBACK));
        keywords.put("ROLLUP", new Integer(ROLLUP));
        keywords.put("ROUTINE", new Integer(ROUTINE));
        keywords.put("ROW", new Integer(ROW));
        keywords.put("ROWS", new Integer(ROWS));

        keywords.put("SAVEPOINT", new Integer(SAVEPOINT));
        keywords.put("SCHEMA", new Integer(SCHEMA));
        keywords.put("SCROLL", new Integer(SCROLL));
        keywords.put("SEARCH", new Integer(SEARCH));
        keywords.put("SECOND", new Integer(SECOND));
        keywords.put("SECTION", new Integer(SECTION));
        keywords.put("SELECT", new Integer(SELECT));
        keywords.put("SEQUENCE", new Integer(SEQUENCE));
        keywords.put("SESSION", new Integer(SESSION));
        keywords.put("SESSION_USER", new Integer(SESSION_USER));
        keywords.put("SET", new Integer(SET));
        keywords.put("SETS", new Integer(SETS));
        keywords.put("SIGNAL", new Integer(SIGNAL));
        keywords.put("SIZE", new Integer(SIZE));
        keywords.put("SMALLINT", new Integer(SMALLINT));
        keywords.put("SPECIFIC", new Integer(SPECIFIC));
        keywords.put("SPECIFICTYPE", new Integer(SPECIFICTYPE));
        keywords.put("SQL", new Integer(SQL));
        keywords.put("SQLEXCEPTION", new Integer(SQLEXCEPTION));
        keywords.put("SQLSTATE", new Integer(SQLSTATE));
        keywords.put("SQLWARNING", new Integer(SQLWARNING));
        keywords.put("START", new Integer(START));
        keywords.put("STATE", new Integer(STATE));
        keywords.put("STATIC", new Integer(STATIC));
        keywords.put("STRUCTURE", new Integer(STRUCTURE));
        keywords.put("SUCCEEDS", new Integer(SUCCEEDS));
        keywords.put("SUM", new Integer(SUM));
        keywords.put("SYSTEM_USER", new Integer(SYSTEM_USER));

        keywords.put("TABLE", new Integer(TABLE));
        keywords.put("TEMPORARY", new Integer(TEMPORARY));
        keywords.put("TERMINATE", new Integer(TERMINATE));
        keywords.put("THAN", new Integer(THAN));
        keywords.put("THEN", new Integer(THEN));
        keywords.put("TIME", new Integer(TIME));
        keywords.put("TIMESTAMP", new Integer(TIMESTAMP));
        keywords.put("TIMEZONE_HOUR", new Integer(TIMEZONE_HOUR));
        keywords.put("TIMEZONE_MINUTE", new Integer(TIMEZONE_MINUTE));
        keywords.put("TO", new Integer(TO));
        keywords.put("TRAILING", new Integer(TRAILING));
        keywords.put("TRANSACTION", new Integer(TRANSACTION));
        keywords.put("TRANSLATION", new Integer(TRANSLATION));
        keywords.put("TREAT", new Integer(TREAT));
        keywords.put("TRIGGER", new Integer(TRIGGER));
        keywords.put("TRUE", new Integer(TRUE));

        keywords.put("UNDER", new Integer(UNDER));
        keywords.put("UNDO", new Integer(UNDO));
        keywords.put("UNION", new Integer(UNION));
        keywords.put("UNIQUE", new Integer(UNIQUE));
        keywords.put("UNKNOWN", new Integer(UNKNOWN));
        keywords.put("UNTIL", new Integer(UNTIL));
        keywords.put("UPDATE", new Integer(UPDATE));
        keywords.put("USAGE", new Integer(USAGE));
        keywords.put("USER", new Integer(USER));
        keywords.put("USING", new Integer(USING));

        keywords.put("VALUE", new Integer(VALUE));
        keywords.put("VALUES", new Integer(VALUES));
        keywords.put("VARCHAR", new Integer(VARCHAR));
        keywords.put("VARIABLE", new Integer(VARIABLE));
        keywords.put("VARYING", new Integer(VARYING));
        keywords.put("VIEW", new Integer(VIEW));

        keywords.put("WHEN", new Integer(WHEN));
        keywords.put("WHENEVER", new Integer(WHENEVER));
        keywords.put("WHERE", new Integer(WHERE));
        keywords.put("WHILE", new Integer(WHILE));
        keywords.put("WITH", new Integer(WITH));
        keywords.put("WRITE", new Integer(WRITE));

        keywords.put("YEAR", new Integer(YEAR));

        keywords.put("ZONE", new Integer(ZONE));

        Enumeration<String> en = keywords.keys();
        while(en.hasMoreElements()) {
            String kw = en.nextElement();
            ints.put(keywords.get(kw), kw);
        }
    }

    public Keyword() {}

    public static int getInt(String name) {
        if(name == null) return -1;
        Integer i = keywords.get(name.toUpperCase());
        if(i == null) return -1;
        return i.intValue();
    }

    public static String getString(int n) {
        Integer i = new Integer(n);
        String s = ints.get(i);
        if(s == null) return "-";
        return s;
    }

}